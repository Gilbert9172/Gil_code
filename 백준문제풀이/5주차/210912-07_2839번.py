"""
문제번호 : 2839
단계 : 	기본 수학1
제목 : 설탕 배달
알고리즘 분류 : 수학 / 다이나믹 프로그래밍 / 그리디 알고리즘
"""

# [다이나믹 프로그래밍]
"""
큰 문제를 작게 나누고, 같은 문제라면 한 번씩만 풀어 문제를 
효율적으로 해결하는 알고리즘 기법.

재귀함수로 코드를 작성할 경우 탑다운 방식이라고 하는데 메모리 overhead가 발생한다. 
(=성능이 저하 된다. 메모리를 적재하고 내리고 하는 과정을 거쳐야하기 때문)

반복문을 사용하게 될 경우를 바텀업 방식이라고 하는데 overhead를 줄일수 있다.
여기서 사용되는 저장용 리스트는 'DP테이블'이라고 부른다.

- Memorization
다이나믹 프로그래밍을 구현하는 방법 중 한 종류로, 한 번 구한 결과를
메모리 공간에 메모해두고 같은 식을 다시 호출하면 메모한 결과를 그래도
가져오는 기법을 의미한다.
"""

# [풀이 방법]
#1. N에서 3을 빼준다. -> X배수 문제에서 항상 생각해 봐야한다. 
#2. 그러다가 N의 값이 5의 배수가 될 경우, 5로 나눠준 몫을 count에 더해준다.
#3. N이 음수가 될 경우 -1 출력

N = int(input())

count = 0
while N >= 0 :

    if N % 5 == 0 :  
        count += (N//5)  
        print(count)
        break
    
    N -= 3  
    count += 1  
    
    if N < 0:
        print("-1")
        break